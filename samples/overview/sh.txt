+ echo 1
1
+ echo main.sh
main.sh
+ echo aaa
aaa
+ for arg in $@
+ echo aaa
aaa
+ pwd
/d/project/sh/samples/overview
+ echo '/c/Windows/system32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/c/Windows/System32/OpenSSH:/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/c/go/bin:/c/Users/jop/go/bin:/mingw64/bin:/usr/bin:/c/path/misc:/c/Program Files/dotnet:/c/Program Files/nodejs:/c/path/python/Scripts:/c/path/python:/c/Users/jop/AppData/Local/Microsoft/WindowsApps:/c/Users/jop/AppData/Local/Programs/Microsoft VS Code/bin:/c/Users/jop/AppData/Roaming/npm'
/c/Windows/system32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0:/c/Windows/System32/OpenSSH:/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/c/go/bin:/c/Users/jop/go/bin:/mingw64/bin:/usr/bin:/c/path/misc:/c/Program Files/dotnet:/c/Program Files/nodejs:/c/path/python/Scripts:/c/path/python:/c/Users/jop/AppData/Local/Microsoft/WindowsApps:/c/Users/jop/AppData/Local/Programs/Microsoft VS Code/bin:/c/Users/jop/AppData/Roaming/npm
+ rm -rf tmp tmp2 tmp3
+ ls
go.txt
main.go
main.sh
sh.txt
+ ls main.go
main.go
+ mkdir -p tmp tmp2
+ cp main.go tmp/.
+ cp -r tmp tmp3
+ mv tmp/main.go tmp2/.
+ pushd tmp2
/d/project/sh/samples/overview/tmp2 /d/project/sh/samples/overview
+ touch 1.txt 2.txt
+ [[ -e 1.txt ]]
+ echo exist
exist
+ [[ -f 1.txt ]]
+ echo 'file exist'
file exist
+ [[ -d 1.txt ]]
+ ls 1.txt 2.txt
1.txt
2.txt
+ rm 1.txt 2.txt main.go
+ popd
/d/project/sh/samples/overview
+ pushd tmp3
/d/project/sh/samples/overview/tmp3 /d/project/sh/samples/overview
+ grep func main.go
func init() {
func main() {
	// grep 'func' main.go
	sh.Grep("func", "main.go").Print()
	// cat *.go | grep 'func'
	sh.Cat("*.go").Grep("func").Print()
	// sed -e 's/func/xxxx/g' main.go > main2.txt
	sh.Sed(func(s string) string {
		return strings.ReplaceAll(s, "func", "xxxx")
	// cat main.go | sed -e 's/func/ssss/g' >> main2.txt
	sh.Cat("main.go").Sed(func(s string) string {
		return strings.ReplaceAll(s, "func", "ssss")
+ cat main.go
+ grep func
func init() {
func main() {
	// grep 'func' main.go
	sh.Grep("func", "main.go").Print()
	// cat *.go | grep 'func'
	sh.Cat("*.go").Grep("func").Print()
	// sed -e 's/func/xxxx/g' main.go > main2.txt
	sh.Sed(func(s string) string {
		return strings.ReplaceAll(s, "func", "xxxx")
	// cat main.go | sed -e 's/func/ssss/g' >> main2.txt
	sh.Cat("main.go").Sed(func(s string) string {
		return strings.ReplaceAll(s, "func", "ssss")
+ sed -e s/func/xxxx/g main.go
+ cat main.go
+ sed -e s/func/ssss/g
+ tar zcvf xxx.tar.gz main.go main2.txt
a main.go
a main2.txt
+ [[ 0 != 0 ]]
+ echo xxxxx
+ base64
eHh4eHgK
+ popd
/d/project/sh/samples/overview
